FROM ubuntu:16.04
MAINTAINER John Starich <johnstarich@johnstarich.com>

# Install set up tools
RUN apt-get update && \
    DEBIAN_FRONTEND=noninterative \
        apt-get install -y --no-install-recommends \
            curl \
            tar

			
RUN echo "deb     http://snapshot.debian.org/archive/debian/20070730T000000Z/ lenny main" >>/etc/apt/sources.list
RUN echo "deb-src http://snapshot.debian.org/archive/debian/20070730T000000Z/ lenny main" >>/etc/apt/sources.list
RUN echo "deb     http://snapshot.debian.org/archive/debian-security/20070730T000000Z/ lenny/updates main" >>/etc/apt/sources.list
RUN echo "deb-src http://snapshot.debian.org/archive/debian-security/20070730T000000Z/ lenny/updates main" >>/etc/apt/sources.list
			

	
RUN apt-get update && \
apt-get install -y --force-yes -f --no-install-recommends \
	coreutils manpages-dev \
	xorg openbox ncurses-dev \
	wget vim emacs gcc g++ clang make \
	gdb ddd qemu nano rpm \ 
	openssh-server cmake gcc build-essential \
	vim python tcpdump telnet byacc \
	flex iproute2 gdbserver less bison valgrind \
	tar patch git perl gdb \ 
	xpra rox-filer openssh-server \
	pwgen xserver-xephyr xdm fluxbox xvfb sudo \
	firefox xterm tar 
	
	
# Clean up apt-get's files
RUN apt-get clean autoclean && \
    rm -rf /var/lib/apt/* /var/lib/cache/* /var/lib/log/*

#################################### ssh SETTINGS #########################

RUN mkdir /var/run/sshd
RUN echo 'root:root' | chpasswd
RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

ENV NOTVISIBLE "in users profile"
RUN echo "export VISIBLE=now" >> /etc/profile

EXPOSE 22 9999 7777
			
#################################### PINTOS SETTINGS #########################


ENV pintos_dir /pintos

#create volume that will appear at runtime mounted
VOLUME [$pintos_dir]

### 
# Prepare the Pintos directory
WORKDIR /tmp
RUN curl -o pintos.tar.gz \
    -L http://www.stanford.edu/class/cs140/projects/pintos/pintos.tar.gz
RUN tar -xzf pintos.tar.gz && \
    mv ./pintos/src /pintos && \
    rm -rf ./pintos.tar.gz ./pintos
WORKDIR /pintos

# Add Pintos to PATH
ENV PATH=/pintos/utils:$PATH

# Fix ACPI bug
## Fix described here under "Troubleshooting": http://arpith.xyz/2016/01/getting-started-with-pintos/
RUN sed -i '/serial_flush ();/a \
  outw( 0x604, 0x0 | 0x2000 );' /pintos/devices/shutdown.c

# Configure Pintos for QEMU
RUN sed -i 's/bochs/qemu/' /pintos/*/Make.vars
## Compile Pintos kernel
RUN cd /pintos/threads && make
## Reconfigure Pintos to use QEMU
RUN sed -i 's/\/usr\/class\/cs140\/pintos\/pintos\/src/\/pintos/' /pintos/utils/pintos-gdb && \
    sed -i 's/LDFLAGS/LDLIBS/' /pintos/utils/Makefile && \
    sed -i 's/\$sim = "bochs"/$sim = "qemu"/' /pintos/utils/pintos && \
    sed -i 's/kernel.bin/\/pintos\/threads\/build\/kernel.bin/' /pintos/utils/pintos && \
    sed -i "s/my (@cmd) = ('qemu');/my (@cmd) = ('qemu-system-x86_64');/" /pintos/utils/pintos && \
    sed -i 's/loader.bin/\/pintos\/threads\/build\/loader.bin/' /pintos/utils/Pintos.pm

####

WORKDIR $pintos_dir/pintos/utils/

RUN make

## Compile Pintos kernel
RUN cd /pintos/threads && make

USER root
WORKDIR /

CMD ["/usr/sbin/sshd", "-D"]